openapi: 3.0.1
info:
  title: Transactioncontrol API
  description: Transactioncontrol API documentation
  termsOfService: ""
  contact:
    name: Henning Vogt
    url: https://www.savinggrains.com
    email: henning@savinggrains.com
  license:
    name: unlicensed
    url: ""
  version: 1.0.0
servers:
  - url: https://localhost:9060
    description: Generated server url
paths:
  /api/warehouses/{id}:
    get:
      tags:
        - warehouse-resource
      operationId: getWarehouse
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Warehouse"
    put:
      tags:
        - warehouse-resource
      operationId: updateWarehouse
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Warehouse"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Warehouse"
    delete:
      tags:
        - warehouse-resource
      operationId: deleteWarehouse
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
    patch:
      tags:
        - warehouse-resource
      operationId: partialUpdateWarehouse
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Warehouse"
          application/merge-patch+json:
            schema:
              $ref: "#/components/schemas/Warehouse"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Warehouse"
  /api/transactions/{id}:
    get:
      tags:
        - transaction-resource
      operationId: getTransaction
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Transaction"
    put:
      tags:
        - transaction-resource
      operationId: updateTransaction
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Transaction"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Transaction"
    delete:
      tags:
        - transaction-resource
      operationId: deleteTransaction
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
    patch:
      tags:
        - transaction-resource
      operationId: partialUpdateTransaction
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Transaction"
          application/merge-patch+json:
            schema:
              $ref: "#/components/schemas/Transaction"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Transaction"
  /api/sales/{id}:
    get:
      tags:
        - sale-resource
      operationId: getSale
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Sale"
    put:
      tags:
        - sale-resource
      operationId: updateSale
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Sale"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Sale"
    delete:
      tags:
        - sale-resource
      operationId: deleteSale
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
    patch:
      tags:
        - sale-resource
      operationId: partialUpdateSale
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Sale"
          application/merge-patch+json:
            schema:
              $ref: "#/components/schemas/Sale"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Sale"
  /api/person-teams/{id}:
    get:
      tags:
        - person-team-resource
      operationId: getPersonTeam
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PersonTeam"
    put:
      tags:
        - person-team-resource
      operationId: updatePersonTeam
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PersonTeam"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PersonTeam"
    delete:
      tags:
        - person-team-resource
      operationId: deletePersonTeam
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
    patch:
      tags:
        - person-team-resource
      operationId: partialUpdatePersonTeam
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PersonTeam"
          application/merge-patch+json:
            schema:
              $ref: "#/components/schemas/PersonTeam"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PersonTeam"
  /api/people/{id}:
    get:
      tags:
        - person-resource
      operationId: getPerson
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Person"
    put:
      tags:
        - person-resource
      operationId: updatePerson
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Person"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Person"
    delete:
      tags:
        - person-resource
      operationId: deletePerson
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
    patch:
      tags:
        - person-resource
      operationId: partialUpdatePerson
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Person"
          application/merge-patch+json:
            schema:
              $ref: "#/components/schemas/Person"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Person"
  /api/payments/{id}:
    get:
      tags:
        - payment-resource
      operationId: getPayment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PaymentDTO"
    put:
      tags:
        - payment-resource
      operationId: updatePayment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PaymentDTO"
    patch:
      tags:
        - payment-resource
      operationId: partialUpdatePayment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentDTO"
          application/merge-patch+json:
            schema:
              $ref: "#/components/schemas/PaymentDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PaymentDTO"
  /api/locations/{id}:
    get:
      tags:
        - location-resource
      operationId: getLocation
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Location"
    put:
      tags:
        - location-resource
      operationId: updateLocation
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Location"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Location"
    delete:
      tags:
        - location-resource
      operationId: deleteLocation
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
    patch:
      tags:
        - location-resource
      operationId: partialUpdateLocation
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Location"
          application/merge-patch+json:
            schema:
              $ref: "#/components/schemas/Location"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Location"
  /api/loan-contracts/{id}:
    get:
      tags:
        - loan-contract-resource
      operationId: getLoanContract
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/LoanContract"
    put:
      tags:
        - loan-contract-resource
      operationId: updateLoanContract
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoanContract"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/LoanContract"
    delete:
      tags:
        - loan-contract-resource
      operationId: deleteLoanContract
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
    patch:
      tags:
        - loan-contract-resource
      operationId: partialUpdateLoanContract
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoanContract"
          application/merge-patch+json:
            schema:
              $ref: "#/components/schemas/LoanContract"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/LoanContract"
  /api/grains/{id}:
    get:
      tags:
        - grain-resource
      operationId: getGrain
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Grain"
    put:
      tags:
        - grain-resource
      operationId: updateGrain
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Grain"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Grain"
    delete:
      tags:
        - grain-resource
      operationId: deleteGrain
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
    patch:
      tags:
        - grain-resource
      operationId: partialUpdateGrain
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Grain"
          application/merge-patch+json:
            schema:
              $ref: "#/components/schemas/Grain"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Grain"
  /api/bags/{id}:
    get:
      tags:
        - bag-resource
      operationId: getBag
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Bag"
    put:
      tags:
        - bag-resource
      operationId: updateBag
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Bag"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Bag"
    delete:
      tags:
        - bag-resource
      operationId: deleteBag
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
    patch:
      tags:
        - bag-resource
      operationId: partialUpdateBag
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Bag"
          application/merge-patch+json:
            schema:
              $ref: "#/components/schemas/Bag"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Bag"
  /api/admin/users:
    get:
      tags:
        - user-resource
      operationId: getAllUsers
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AdminUserDTO"
    put:
      tags:
        - user-resource
      operationId: updateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdminUserDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AdminUserDTO"
    post:
      tags:
        - user-resource
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdminUserDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/User"
  /api/warehouses:
    get:
      tags:
        - warehouse-resource
      operationId: getAllWarehouses
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Warehouse"
    post:
      tags:
        - warehouse-resource
      operationId: createWarehouse
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Warehouse"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Warehouse"
  /api/transactions:
    get:
      tags:
        - transaction-resource
      operationId: getAllTransactions
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
        - name: filter
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"
    post:
      tags:
        - transaction-resource
      operationId: createTransaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Transaction"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Transaction"
  /api/sales:
    get:
      tags:
        - sale-resource
      operationId: getAllSales
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Sale"
    post:
      tags:
        - sale-resource
      operationId: createSale
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Sale"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Sale"
  /api/register:
    post:
      tags:
        - account-resource
      operationId: registerAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ManagedUserVM"
        required: true
      responses:
        "201":
          description: Created
  /api/person-teams:
    get:
      tags:
        - person-team-resource
      operationId: getAllPersonTeams
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PersonTeam"
    post:
      tags:
        - person-team-resource
      operationId: createPersonTeam
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PersonTeam"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PersonTeam"
  /api/people:
    get:
      tags:
        - person-resource
      operationId: getAllPeople
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
        - name: eagerload
          in: query
          required: false
          schema:
            type: boolean
            default: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Person"
    post:
      tags:
        - person-resource
      operationId: createPerson
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Person"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Person"
  /api/payments:
    get:
      tags:
        - payment-resource
      operationId: getAllPayments
      parameters:
        - name: id.greaterThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.lessThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.lessThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.equals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.notEquals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: id.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: id.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: paymentRequestedDate.greaterThan
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentRequestedDate.lessThan
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentRequestedDate.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentRequestedDate.lessThanOrEqual
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentRequestedDate.equals
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentRequestedDate.notEquals
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentRequestedDate.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentRequestedDate.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              format: date-time
        - name: paymentRequestedDate.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              format: date-time
        - name: paymentDate.greaterThan
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentDate.lessThan
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentDate.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentDate.lessThanOrEqual
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentDate.equals
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentDate.notEquals
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentDate.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentDate.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              format: date-time
        - name: paymentDate.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              format: date-time
        - name: nonLoanMoneyReceived.greaterThan
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: nonLoanMoneyReceived.lessThan
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: nonLoanMoneyReceived.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: nonLoanMoneyReceived.lessThanOrEqual
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: nonLoanMoneyReceived.equals
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: nonLoanMoneyReceived.notEquals
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: nonLoanMoneyReceived.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: nonLoanMoneyReceived.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              format: date-time
        - name: nonLoanMoneyReceived.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              format: date-time
        - name: price.greaterThan
          in: query
          required: false
          schema:
            type: number
        - name: price.lessThan
          in: query
          required: false
          schema:
            type: number
        - name: price.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: price.lessThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: price.equals
          in: query
          required: false
          schema:
            type: number
        - name: price.notEquals
          in: query
          required: false
          schema:
            type: number
        - name: price.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: price.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: price.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: paymentFromName.contains
          in: query
          required: false
          schema:
            type: string
        - name: paymentFromName.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: paymentFromName.equals
          in: query
          required: false
          schema:
            type: string
        - name: paymentFromName.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: paymentFromName.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentFromName.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentFromName.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentToName.contains
          in: query
          required: false
          schema:
            type: string
        - name: paymentToName.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: paymentToName.equals
          in: query
          required: false
          schema:
            type: string
        - name: paymentToName.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: paymentToName.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentToName.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentToName.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentFromMobile.contains
          in: query
          required: false
          schema:
            type: string
        - name: paymentFromMobile.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: paymentFromMobile.equals
          in: query
          required: false
          schema:
            type: string
        - name: paymentFromMobile.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: paymentFromMobile.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentFromMobile.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentFromMobile.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentToMobile.contains
          in: query
          required: false
          schema:
            type: string
        - name: paymentToMobile.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: paymentToMobile.equals
          in: query
          required: false
          schema:
            type: string
        - name: paymentToMobile.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: paymentToMobile.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentToMobile.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentToMobile.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: coordinates.contains
          in: query
          required: false
          schema:
            type: string
        - name: coordinates.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: coordinates.equals
          in: query
          required: false
          schema:
            type: string
        - name: coordinates.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: coordinates.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: coordinates.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: coordinates.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: remark.contains
          in: query
          required: false
          schema:
            type: string
        - name: remark.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: remark.equals
          in: query
          required: false
          schema:
            type: string
        - name: remark.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: remark.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: remark.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: remark.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: deleted.equals
          in: query
          required: false
          schema:
            type: boolean
        - name: deleted.notEquals
          in: query
          required: false
          schema:
            type: boolean
        - name: deleted.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: deleted.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
        - name: deleted.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
        - name: collateral.greaterThan
          in: query
          required: false
          schema:
            type: number
        - name: collateral.lessThan
          in: query
          required: false
          schema:
            type: number
        - name: collateral.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: collateral.lessThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: collateral.equals
          in: query
          required: false
          schema:
            type: number
        - name: collateral.notEquals
          in: query
          required: false
          schema:
            type: number
        - name: collateral.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: collateral.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: collateral.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: network.equals
          in: query
          required: false
          schema:
            type: string
            enum:
              - AIR
              - VOD
              - MTN
              - TIG
              - MPESA
        - name: network.notEquals
          in: query
          required: false
          schema:
            type: string
            enum:
              - AIR
              - VOD
              - MTN
              - TIG
              - MPESA
        - name: network.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: network.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - AIR
                - VOD
                - MTN
                - TIG
                - MPESA
        - name: network.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - AIR
                - VOD
                - MTN
                - TIG
                - MPESA
        - name: paymentExtid.contains
          in: query
          required: false
          schema:
            type: string
        - name: paymentExtid.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: paymentExtid.equals
          in: query
          required: false
          schema:
            type: string
        - name: paymentExtid.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: paymentExtid.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentExtid.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentExtid.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentErroneous.equals
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentErroneous.notEquals
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentErroneous.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentErroneous.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
        - name: paymentErroneous.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
        - name: paymentStatusMessage.contains
          in: query
          required: false
          schema:
            type: string
        - name: paymentStatusMessage.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: paymentStatusMessage.equals
          in: query
          required: false
          schema:
            type: string
        - name: paymentStatusMessage.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: paymentStatusMessage.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentStatusMessage.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentStatusMessage.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentResponse.contains
          in: query
          required: false
          schema:
            type: string
        - name: paymentResponse.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: paymentResponse.equals
          in: query
          required: false
          schema:
            type: string
        - name: paymentResponse.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: paymentResponse.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentResponse.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentResponse.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: transactionId.greaterThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: transactionId.lessThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: transactionId.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: transactionId.lessThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: transactionId.equals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: transactionId.notEquals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: transactionId.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: transactionId.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: transactionId.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: saleId.greaterThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: saleId.lessThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: saleId.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: saleId.lessThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: saleId.equals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: saleId.notEquals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: saleId.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: saleId.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: saleId.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: distinct
          in: query
          required: false
          schema:
            type: boolean
        - name: customerId.greaterThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: customerId.lessThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: customerId.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: customerId.lessThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: customerId.equals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: customerId.notEquals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: customerId.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: customerId.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: customerId.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PaymentDTO"
    post:
      tags:
        - payment-resource
      operationId: createPayment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PaymentDTO"
  /api/payment-transactions:
    get:
      tags:
        - payment-transaction-resource
      operationId: getAllPaymentTransactions
      parameters:
        - name: id.greaterThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.lessThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.lessThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.equals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.notEquals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: id.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: id.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: paymentPurpose.contains
          in: query
          required: false
          schema:
            type: string
        - name: paymentPurpose.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: paymentPurpose.equals
          in: query
          required: false
          schema:
            type: string
        - name: paymentPurpose.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: paymentPurpose.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentPurpose.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentPurpose.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentDate.greaterThan
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentDate.lessThan
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentDate.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentDate.lessThanOrEqual
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentDate.equals
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentDate.notEquals
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentDate.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentDate.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              format: date-time
        - name: paymentDate.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              format: date-time
        - name: paymentTriggeredDate.greaterThan
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentTriggeredDate.lessThan
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentTriggeredDate.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentTriggeredDate.lessThanOrEqual
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentTriggeredDate.equals
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentTriggeredDate.notEquals
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentTriggeredDate.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentTriggeredDate.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              format: date-time
        - name: paymentTriggeredDate.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              format: date-time
        - name: networkType.equals
          in: query
          required: false
          schema:
            type: string
            enum:
              - AIR
              - VOD
              - MTN
              - TIG
              - MPESA
        - name: networkType.notEquals
          in: query
          required: false
          schema:
            type: string
            enum:
              - AIR
              - VOD
              - MTN
              - TIG
              - MPESA
        - name: networkType.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: networkType.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - AIR
                - VOD
                - MTN
                - TIG
                - MPESA
        - name: networkType.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - AIR
                - VOD
                - MTN
                - TIG
                - MPESA
        - name: paymentErroneous.equals
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentErroneous.notEquals
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentErroneous.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentErroneous.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
        - name: paymentErroneous.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
        - name: paymentStatusMessage.contains
          in: query
          required: false
          schema:
            type: string
        - name: paymentStatusMessage.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: paymentStatusMessage.equals
          in: query
          required: false
          schema:
            type: string
        - name: paymentStatusMessage.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: paymentStatusMessage.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentStatusMessage.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentStatusMessage.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentResponse.contains
          in: query
          required: false
          schema:
            type: string
        - name: paymentResponse.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: paymentResponse.equals
          in: query
          required: false
          schema:
            type: string
        - name: paymentResponse.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: paymentResponse.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentResponse.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentResponse.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: price.greaterThan
          in: query
          required: false
          schema:
            type: number
        - name: price.lessThan
          in: query
          required: false
          schema:
            type: number
        - name: price.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: price.lessThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: price.equals
          in: query
          required: false
          schema:
            type: number
        - name: price.notEquals
          in: query
          required: false
          schema:
            type: number
        - name: price.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: price.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: price.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: paymentFromName.contains
          in: query
          required: false
          schema:
            type: string
        - name: paymentFromName.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: paymentFromName.equals
          in: query
          required: false
          schema:
            type: string
        - name: paymentFromName.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: paymentFromName.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentFromName.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentFromName.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentToName.contains
          in: query
          required: false
          schema:
            type: string
        - name: paymentToName.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: paymentToName.equals
          in: query
          required: false
          schema:
            type: string
        - name: paymentToName.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: paymentToName.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentToName.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentToName.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentFromMobile.contains
          in: query
          required: false
          schema:
            type: string
        - name: paymentFromMobile.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: paymentFromMobile.equals
          in: query
          required: false
          schema:
            type: string
        - name: paymentFromMobile.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: paymentFromMobile.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentFromMobile.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentFromMobile.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentToMobile.contains
          in: query
          required: false
          schema:
            type: string
        - name: paymentToMobile.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: paymentToMobile.equals
          in: query
          required: false
          schema:
            type: string
        - name: paymentToMobile.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: paymentToMobile.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentToMobile.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentToMobile.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: momoTransType.equals
          in: query
          required: false
          schema:
            type: string
            enum:
              - CTM
              - MTC
              - SMS
        - name: momoTransType.notEquals
          in: query
          required: false
          schema:
            type: string
            enum:
              - CTM
              - MTC
              - SMS
        - name: momoTransType.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: momoTransType.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - CTM
                - MTC
                - SMS
        - name: momoTransType.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - CTM
                - MTC
                - SMS
        - name: paymentExtId.contains
          in: query
          required: false
          schema:
            type: string
        - name: paymentExtId.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: paymentExtId.equals
          in: query
          required: false
          schema:
            type: string
        - name: paymentExtId.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: paymentExtId.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentExtId.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentExtId.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: humanSaysOk.equals
          in: query
          required: false
          schema:
            type: boolean
        - name: humanSaysOk.notEquals
          in: query
          required: false
          schema:
            type: boolean
        - name: humanSaysOk.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: humanSaysOk.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
        - name: humanSaysOk.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
        - name: fee.greaterThan
          in: query
          required: false
          schema:
            type: number
        - name: fee.lessThan
          in: query
          required: false
          schema:
            type: number
        - name: fee.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: fee.lessThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: fee.equals
          in: query
          required: false
          schema:
            type: number
        - name: fee.notEquals
          in: query
          required: false
          schema:
            type: number
        - name: fee.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: fee.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: fee.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: paymentId.greaterThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: paymentId.lessThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: paymentId.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: paymentId.lessThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: paymentId.equals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: paymentId.notEquals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: paymentId.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentId.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: paymentId.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: dependsOnPaymentTransactionId.greaterThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: dependsOnPaymentTransactionId.lessThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: dependsOnPaymentTransactionId.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: dependsOnPaymentTransactionId.lessThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: dependsOnPaymentTransactionId.equals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: dependsOnPaymentTransactionId.notEquals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: dependsOnPaymentTransactionId.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: dependsOnPaymentTransactionId.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: dependsOnPaymentTransactionId.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: distinct
          in: query
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PaymentTransactionDTO"
    post:
      tags:
        - payment-transaction-resource
      operationId: createPaymentTransaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentTransactionDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PaymentTransactionDTO"
  /api/locations:
    get:
      tags:
        - location-resource
      operationId: getAllLocations
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Location"
    post:
      tags:
        - location-resource
      operationId: createLocation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Location"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Location"
  /api/loan-contracts:
    get:
      tags:
        - loan-contract-resource
      operationId: getAllLoanContracts
      parameters:
        - name: id.greaterThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.lessThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.lessThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.equals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.notEquals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: id.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: id.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: loanAmount.greaterThan
          in: query
          required: false
          schema:
            type: number
        - name: loanAmount.lessThan
          in: query
          required: false
          schema:
            type: number
        - name: loanAmount.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: loanAmount.lessThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: loanAmount.equals
          in: query
          required: false
          schema:
            type: number
        - name: loanAmount.notEquals
          in: query
          required: false
          schema:
            type: number
        - name: loanAmount.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: loanAmount.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: loanAmount.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: ownMoney.greaterThan
          in: query
          required: false
          schema:
            type: number
        - name: ownMoney.lessThan
          in: query
          required: false
          schema:
            type: number
        - name: ownMoney.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: ownMoney.lessThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: ownMoney.equals
          in: query
          required: false
          schema:
            type: number
        - name: ownMoney.notEquals
          in: query
          required: false
          schema:
            type: number
        - name: ownMoney.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: ownMoney.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: ownMoney.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: approved.equals
          in: query
          required: false
          schema:
            type: boolean
        - name: approved.notEquals
          in: query
          required: false
          schema:
            type: boolean
        - name: approved.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: approved.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
        - name: approved.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
        - name: contractDuration.greaterThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: contractDuration.lessThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: contractDuration.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: contractDuration.lessThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: contractDuration.equals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: contractDuration.notEquals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: contractDuration.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: contractDuration.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: contractDuration.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: contractStartDate.greaterThan
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: contractStartDate.lessThan
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: contractStartDate.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: contractStartDate.lessThanOrEqual
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: contractStartDate.equals
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: contractStartDate.notEquals
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: contractStartDate.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: contractStartDate.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              format: date-time
        - name: contractStartDate.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              format: date-time
        - name: createdDate.greaterThan
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: createdDate.lessThan
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: createdDate.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: createdDate.lessThanOrEqual
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: createdDate.equals
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: createdDate.notEquals
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: createdDate.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: createdDate.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              format: date-time
        - name: createdDate.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              format: date-time
        - name: lastUpdateDate.greaterThan
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: lastUpdateDate.lessThan
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: lastUpdateDate.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: lastUpdateDate.lessThanOrEqual
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: lastUpdateDate.equals
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: lastUpdateDate.notEquals
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: lastUpdateDate.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: lastUpdateDate.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              format: date-time
        - name: lastUpdateDate.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              format: date-time
        - name: interestRate.greaterThan
          in: query
          required: false
          schema:
            type: number
        - name: interestRate.lessThan
          in: query
          required: false
          schema:
            type: number
        - name: interestRate.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: interestRate.lessThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: interestRate.equals
          in: query
          required: false
          schema:
            type: number
        - name: interestRate.notEquals
          in: query
          required: false
          schema:
            type: number
        - name: interestRate.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: interestRate.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: interestRate.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: paybackRate.greaterThan
          in: query
          required: false
          schema:
            type: number
        - name: paybackRate.lessThan
          in: query
          required: false
          schema:
            type: number
        - name: paybackRate.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: paybackRate.lessThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: paybackRate.equals
          in: query
          required: false
          schema:
            type: number
        - name: paybackRate.notEquals
          in: query
          required: false
          schema:
            type: number
        - name: paybackRate.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paybackRate.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: paybackRate.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: ctmFee.greaterThan
          in: query
          required: false
          schema:
            type: number
        - name: ctmFee.lessThan
          in: query
          required: false
          schema:
            type: number
        - name: ctmFee.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: ctmFee.lessThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: ctmFee.equals
          in: query
          required: false
          schema:
            type: number
        - name: ctmFee.notEquals
          in: query
          required: false
          schema:
            type: number
        - name: ctmFee.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: ctmFee.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: ctmFee.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: mtcFee.greaterThan
          in: query
          required: false
          schema:
            type: number
        - name: mtcFee.lessThan
          in: query
          required: false
          schema:
            type: number
        - name: mtcFee.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: mtcFee.lessThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: mtcFee.equals
          in: query
          required: false
          schema:
            type: number
        - name: mtcFee.notEquals
          in: query
          required: false
          schema:
            type: number
        - name: mtcFee.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: mtcFee.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: mtcFee.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: ctmCap.greaterThan
          in: query
          required: false
          schema:
            type: number
        - name: ctmCap.lessThan
          in: query
          required: false
          schema:
            type: number
        - name: ctmCap.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: ctmCap.lessThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: ctmCap.equals
          in: query
          required: false
          schema:
            type: number
        - name: ctmCap.notEquals
          in: query
          required: false
          schema:
            type: number
        - name: ctmCap.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: ctmCap.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: ctmCap.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: mtcCap.greaterThan
          in: query
          required: false
          schema:
            type: number
        - name: mtcCap.lessThan
          in: query
          required: false
          schema:
            type: number
        - name: mtcCap.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: mtcCap.lessThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: mtcCap.equals
          in: query
          required: false
          schema:
            type: number
        - name: mtcCap.notEquals
          in: query
          required: false
          schema:
            type: number
        - name: mtcCap.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: mtcCap.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: mtcCap.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: allowCtm.equals
          in: query
          required: false
          schema:
            type: boolean
        - name: allowCtm.notEquals
          in: query
          required: false
          schema:
            type: boolean
        - name: allowCtm.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: allowCtm.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
        - name: allowCtm.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
        - name: personId.greaterThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: personId.lessThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: personId.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: personId.lessThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: personId.equals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: personId.notEquals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: personId.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: personId.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: personId.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: distinct
          in: query
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LoanContract"
    post:
      tags:
        - loan-contract-resource
      operationId: createLoanContract
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoanContract"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/LoanContract"
  /api/grains:
    get:
      tags:
        - grain-resource
      operationId: getAllGrains
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Grain"
    post:
      tags:
        - grain-resource
      operationId: createGrain
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Grain"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Grain"
  /api/bags:
    get:
      tags:
        - bag-resource
      operationId: getAllBags
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Bag"
    post:
      tags:
        - bag-resource
      operationId: createBag
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Bag"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Bag"
  /api/authenticate:
    get:
      tags:
        - account-resource
      operationId: isAuthenticated
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: string
    post:
      tags:
        - user-jwt-controller
      operationId: authorize
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginVM"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/JWTToken"
  /api/account:
    get:
      tags:
        - account-resource
      operationId: getAccount
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AdminUserDTO"
    post:
      tags:
        - account-resource
      operationId: saveAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdminUserDTO"
        required: true
      responses:
        "200":
          description: OK
  /api/account/reset-password/init:
    post:
      tags:
        - account-resource
      operationId: requestPasswordReset
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
  /api/account/reset-password/finish:
    post:
      tags:
        - account-resource
      operationId: finishPasswordReset
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KeyAndPasswordVM"
        required: true
      responses:
        "200":
          description: OK
  /api/account/change-password:
    post:
      tags:
        - account-resource
      operationId: changePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PasswordChangeDTO"
        required: true
      responses:
        "200":
          description: OK
  /api/uvs/{id}:
    get:
      tags:
        - uv-resource
      operationId: getUv
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Uv"
    patch:
      tags:
        - uv-resource
      operationId: partialUpdateUv
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Uv"
          application/merge-patch+json:
            schema:
              $ref: "#/components/schemas/Uv"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Uv"
  /api/payment-transactions/{id}:
    get:
      tags:
        - payment-transaction-resource
      operationId: getPaymentTransaction
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PaymentTransactionDTO"
    patch:
      tags:
        - payment-transaction-resource
      operationId: partialUpdatePaymentTransaction
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentTransactionDTO"
          application/merge-patch+json:
            schema:
              $ref: "#/components/schemas/PaymentTransactionDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PaymentTransactionDTO"
  /api/payment-transactions/activate/{id}:
    patch:
      tags:
        - payment-transaction-resource
      operationId: activatePaymentTransaction
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PaymentTransactionDTO"
  /api/inventories/{id}:
    get:
      tags:
        - inventory-resource
      operationId: getInventory
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Inventory"
    patch:
      tags:
        - inventory-resource
      operationId: partialUpdateInventory
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Inventory"
          application/merge-patch+json:
            schema:
              $ref: "#/components/schemas/Inventory"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Inventory"
  /api/uvs:
    get:
      tags:
        - uv-resource
      operationId: getAllUvs
      parameters:
        - name: customerId.greaterThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: customerId.lessThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: customerId.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: customerId.lessThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: customerId.equals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: customerId.notEquals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: customerId.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: customerId.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: customerId.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: id.greaterThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.lessThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.lessThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.equals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.notEquals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: id.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: id.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: login.contains
          in: query
          required: false
          schema:
            type: string
        - name: login.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: login.equals
          in: query
          required: false
          schema:
            type: string
        - name: login.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: login.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: login.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: login.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: mobileNumber.contains
          in: query
          required: false
          schema:
            type: string
        - name: mobileNumber.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: mobileNumber.equals
          in: query
          required: false
          schema:
            type: string
        - name: mobileNumber.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: mobileNumber.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: mobileNumber.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: mobileNumber.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: firstName.contains
          in: query
          required: false
          schema:
            type: string
        - name: firstName.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: firstName.equals
          in: query
          required: false
          schema:
            type: string
        - name: firstName.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: firstName.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: firstName.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: firstName.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: lastName.contains
          in: query
          required: false
          schema:
            type: string
        - name: lastName.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: lastName.equals
          in: query
          required: false
          schema:
            type: string
        - name: lastName.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: lastName.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: lastName.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: lastName.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: distinct
          in: query
          required: false
          schema:
            type: boolean
        - name: name.contains
          in: query
          required: false
          schema:
            type: string
        - name: name.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: name.equals
          in: query
          required: false
          schema:
            type: string
        - name: name.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: name.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: name.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: name.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Uv"
  /api/uvs/count:
    get:
      tags:
        - uv-resource
      operationId: countUvs
      parameters:
        - name: customerId.greaterThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: customerId.lessThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: customerId.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: customerId.lessThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: customerId.equals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: customerId.notEquals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: customerId.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: customerId.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: customerId.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: id.greaterThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.lessThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.lessThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.equals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.notEquals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: id.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: id.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: login.contains
          in: query
          required: false
          schema:
            type: string
        - name: login.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: login.equals
          in: query
          required: false
          schema:
            type: string
        - name: login.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: login.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: login.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: login.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: mobileNumber.contains
          in: query
          required: false
          schema:
            type: string
        - name: mobileNumber.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: mobileNumber.equals
          in: query
          required: false
          schema:
            type: string
        - name: mobileNumber.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: mobileNumber.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: mobileNumber.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: mobileNumber.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: firstName.contains
          in: query
          required: false
          schema:
            type: string
        - name: firstName.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: firstName.equals
          in: query
          required: false
          schema:
            type: string
        - name: firstName.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: firstName.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: firstName.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: firstName.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: lastName.contains
          in: query
          required: false
          schema:
            type: string
        - name: lastName.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: lastName.equals
          in: query
          required: false
          schema:
            type: string
        - name: lastName.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: lastName.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: lastName.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: lastName.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: distinct
          in: query
          required: false
          schema:
            type: boolean
        - name: name.contains
          in: query
          required: false
          schema:
            type: string
        - name: name.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: name.equals
          in: query
          required: false
          schema:
            type: string
        - name: name.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: name.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: name.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: name.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: integer
                format: int64
  /api/users:
    get:
      tags:
        - public-user-resource
      operationId: getAllPublicUsers
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserDTO"
  /api/payments/count:
    get:
      tags:
        - payment-resource
      operationId: countPayments
      parameters:
        - name: id.greaterThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.lessThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.lessThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.equals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.notEquals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: id.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: id.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: paymentRequestedDate.greaterThan
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentRequestedDate.lessThan
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentRequestedDate.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentRequestedDate.lessThanOrEqual
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentRequestedDate.equals
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentRequestedDate.notEquals
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentRequestedDate.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentRequestedDate.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              format: date-time
        - name: paymentRequestedDate.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              format: date-time
        - name: paymentDate.greaterThan
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentDate.lessThan
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentDate.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentDate.lessThanOrEqual
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentDate.equals
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentDate.notEquals
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentDate.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentDate.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              format: date-time
        - name: paymentDate.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              format: date-time
        - name: nonLoanMoneyReceived.greaterThan
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: nonLoanMoneyReceived.lessThan
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: nonLoanMoneyReceived.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: nonLoanMoneyReceived.lessThanOrEqual
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: nonLoanMoneyReceived.equals
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: nonLoanMoneyReceived.notEquals
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: nonLoanMoneyReceived.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: nonLoanMoneyReceived.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              format: date-time
        - name: nonLoanMoneyReceived.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              format: date-time
        - name: price.greaterThan
          in: query
          required: false
          schema:
            type: number
        - name: price.lessThan
          in: query
          required: false
          schema:
            type: number
        - name: price.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: price.lessThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: price.equals
          in: query
          required: false
          schema:
            type: number
        - name: price.notEquals
          in: query
          required: false
          schema:
            type: number
        - name: price.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: price.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: price.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: paymentFromName.contains
          in: query
          required: false
          schema:
            type: string
        - name: paymentFromName.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: paymentFromName.equals
          in: query
          required: false
          schema:
            type: string
        - name: paymentFromName.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: paymentFromName.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentFromName.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentFromName.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentToName.contains
          in: query
          required: false
          schema:
            type: string
        - name: paymentToName.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: paymentToName.equals
          in: query
          required: false
          schema:
            type: string
        - name: paymentToName.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: paymentToName.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentToName.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentToName.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentFromMobile.contains
          in: query
          required: false
          schema:
            type: string
        - name: paymentFromMobile.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: paymentFromMobile.equals
          in: query
          required: false
          schema:
            type: string
        - name: paymentFromMobile.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: paymentFromMobile.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentFromMobile.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentFromMobile.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentToMobile.contains
          in: query
          required: false
          schema:
            type: string
        - name: paymentToMobile.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: paymentToMobile.equals
          in: query
          required: false
          schema:
            type: string
        - name: paymentToMobile.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: paymentToMobile.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentToMobile.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentToMobile.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: coordinates.contains
          in: query
          required: false
          schema:
            type: string
        - name: coordinates.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: coordinates.equals
          in: query
          required: false
          schema:
            type: string
        - name: coordinates.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: coordinates.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: coordinates.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: coordinates.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: remark.contains
          in: query
          required: false
          schema:
            type: string
        - name: remark.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: remark.equals
          in: query
          required: false
          schema:
            type: string
        - name: remark.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: remark.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: remark.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: remark.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: deleted.equals
          in: query
          required: false
          schema:
            type: boolean
        - name: deleted.notEquals
          in: query
          required: false
          schema:
            type: boolean
        - name: deleted.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: deleted.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
        - name: deleted.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
        - name: collateral.greaterThan
          in: query
          required: false
          schema:
            type: number
        - name: collateral.lessThan
          in: query
          required: false
          schema:
            type: number
        - name: collateral.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: collateral.lessThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: collateral.equals
          in: query
          required: false
          schema:
            type: number
        - name: collateral.notEquals
          in: query
          required: false
          schema:
            type: number
        - name: collateral.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: collateral.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: collateral.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: network.equals
          in: query
          required: false
          schema:
            type: string
            enum:
              - AIR
              - VOD
              - MTN
              - TIG
              - MPESA
        - name: network.notEquals
          in: query
          required: false
          schema:
            type: string
            enum:
              - AIR
              - VOD
              - MTN
              - TIG
              - MPESA
        - name: network.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: network.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - AIR
                - VOD
                - MTN
                - TIG
                - MPESA
        - name: network.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - AIR
                - VOD
                - MTN
                - TIG
                - MPESA
        - name: paymentExtid.contains
          in: query
          required: false
          schema:
            type: string
        - name: paymentExtid.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: paymentExtid.equals
          in: query
          required: false
          schema:
            type: string
        - name: paymentExtid.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: paymentExtid.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentExtid.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentExtid.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentErroneous.equals
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentErroneous.notEquals
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentErroneous.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentErroneous.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
        - name: paymentErroneous.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
        - name: paymentStatusMessage.contains
          in: query
          required: false
          schema:
            type: string
        - name: paymentStatusMessage.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: paymentStatusMessage.equals
          in: query
          required: false
          schema:
            type: string
        - name: paymentStatusMessage.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: paymentStatusMessage.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentStatusMessage.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentStatusMessage.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentResponse.contains
          in: query
          required: false
          schema:
            type: string
        - name: paymentResponse.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: paymentResponse.equals
          in: query
          required: false
          schema:
            type: string
        - name: paymentResponse.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: paymentResponse.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentResponse.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentResponse.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: transactionId.greaterThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: transactionId.lessThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: transactionId.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: transactionId.lessThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: transactionId.equals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: transactionId.notEquals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: transactionId.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: transactionId.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: transactionId.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: saleId.greaterThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: saleId.lessThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: saleId.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: saleId.lessThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: saleId.equals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: saleId.notEquals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: saleId.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: saleId.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: saleId.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: distinct
          in: query
          required: false
          schema:
            type: boolean
        - name: customerId.greaterThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: customerId.lessThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: customerId.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: customerId.lessThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: customerId.equals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: customerId.notEquals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: customerId.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: customerId.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: customerId.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: integer
                format: int64
  /api/payment-transactions/count:
    get:
      tags:
        - payment-transaction-resource
      operationId: countPaymentTransactions
      parameters:
        - name: id.greaterThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.lessThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.lessThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.equals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.notEquals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: id.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: id.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: paymentPurpose.contains
          in: query
          required: false
          schema:
            type: string
        - name: paymentPurpose.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: paymentPurpose.equals
          in: query
          required: false
          schema:
            type: string
        - name: paymentPurpose.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: paymentPurpose.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentPurpose.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentPurpose.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentDate.greaterThan
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentDate.lessThan
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentDate.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentDate.lessThanOrEqual
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentDate.equals
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentDate.notEquals
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentDate.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentDate.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              format: date-time
        - name: paymentDate.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              format: date-time
        - name: paymentTriggeredDate.greaterThan
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentTriggeredDate.lessThan
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentTriggeredDate.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentTriggeredDate.lessThanOrEqual
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentTriggeredDate.equals
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentTriggeredDate.notEquals
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentTriggeredDate.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentTriggeredDate.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              format: date-time
        - name: paymentTriggeredDate.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              format: date-time
        - name: networkType.equals
          in: query
          required: false
          schema:
            type: string
            enum:
              - AIR
              - VOD
              - MTN
              - TIG
              - MPESA
        - name: networkType.notEquals
          in: query
          required: false
          schema:
            type: string
            enum:
              - AIR
              - VOD
              - MTN
              - TIG
              - MPESA
        - name: networkType.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: networkType.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - AIR
                - VOD
                - MTN
                - TIG
                - MPESA
        - name: networkType.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - AIR
                - VOD
                - MTN
                - TIG
                - MPESA
        - name: paymentErroneous.equals
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentErroneous.notEquals
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentErroneous.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentErroneous.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
        - name: paymentErroneous.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
        - name: paymentStatusMessage.contains
          in: query
          required: false
          schema:
            type: string
        - name: paymentStatusMessage.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: paymentStatusMessage.equals
          in: query
          required: false
          schema:
            type: string
        - name: paymentStatusMessage.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: paymentStatusMessage.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentStatusMessage.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentStatusMessage.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentResponse.contains
          in: query
          required: false
          schema:
            type: string
        - name: paymentResponse.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: paymentResponse.equals
          in: query
          required: false
          schema:
            type: string
        - name: paymentResponse.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: paymentResponse.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentResponse.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentResponse.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: price.greaterThan
          in: query
          required: false
          schema:
            type: number
        - name: price.lessThan
          in: query
          required: false
          schema:
            type: number
        - name: price.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: price.lessThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: price.equals
          in: query
          required: false
          schema:
            type: number
        - name: price.notEquals
          in: query
          required: false
          schema:
            type: number
        - name: price.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: price.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: price.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: paymentFromName.contains
          in: query
          required: false
          schema:
            type: string
        - name: paymentFromName.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: paymentFromName.equals
          in: query
          required: false
          schema:
            type: string
        - name: paymentFromName.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: paymentFromName.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentFromName.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentFromName.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentToName.contains
          in: query
          required: false
          schema:
            type: string
        - name: paymentToName.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: paymentToName.equals
          in: query
          required: false
          schema:
            type: string
        - name: paymentToName.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: paymentToName.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentToName.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentToName.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentFromMobile.contains
          in: query
          required: false
          schema:
            type: string
        - name: paymentFromMobile.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: paymentFromMobile.equals
          in: query
          required: false
          schema:
            type: string
        - name: paymentFromMobile.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: paymentFromMobile.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentFromMobile.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentFromMobile.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentToMobile.contains
          in: query
          required: false
          schema:
            type: string
        - name: paymentToMobile.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: paymentToMobile.equals
          in: query
          required: false
          schema:
            type: string
        - name: paymentToMobile.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: paymentToMobile.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentToMobile.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentToMobile.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: momoTransType.equals
          in: query
          required: false
          schema:
            type: string
            enum:
              - CTM
              - MTC
              - SMS
        - name: momoTransType.notEquals
          in: query
          required: false
          schema:
            type: string
            enum:
              - CTM
              - MTC
              - SMS
        - name: momoTransType.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: momoTransType.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - CTM
                - MTC
                - SMS
        - name: momoTransType.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - CTM
                - MTC
                - SMS
        - name: paymentExtId.contains
          in: query
          required: false
          schema:
            type: string
        - name: paymentExtId.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: paymentExtId.equals
          in: query
          required: false
          schema:
            type: string
        - name: paymentExtId.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: paymentExtId.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentExtId.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: paymentExtId.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: humanSaysOk.equals
          in: query
          required: false
          schema:
            type: boolean
        - name: humanSaysOk.notEquals
          in: query
          required: false
          schema:
            type: boolean
        - name: humanSaysOk.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: humanSaysOk.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
        - name: humanSaysOk.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
        - name: fee.greaterThan
          in: query
          required: false
          schema:
            type: number
        - name: fee.lessThan
          in: query
          required: false
          schema:
            type: number
        - name: fee.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: fee.lessThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: fee.equals
          in: query
          required: false
          schema:
            type: number
        - name: fee.notEquals
          in: query
          required: false
          schema:
            type: number
        - name: fee.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: fee.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: fee.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: paymentId.greaterThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: paymentId.lessThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: paymentId.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: paymentId.lessThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: paymentId.equals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: paymentId.notEquals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: paymentId.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paymentId.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: paymentId.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: dependsOnPaymentTransactionId.greaterThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: dependsOnPaymentTransactionId.lessThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: dependsOnPaymentTransactionId.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: dependsOnPaymentTransactionId.lessThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: dependsOnPaymentTransactionId.equals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: dependsOnPaymentTransactionId.notEquals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: dependsOnPaymentTransactionId.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: dependsOnPaymentTransactionId.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: dependsOnPaymentTransactionId.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: distinct
          in: query
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: integer
                format: int64
  /api/loan-contracts/count:
    get:
      tags:
        - loan-contract-resource
      operationId: countLoanContracts
      parameters:
        - name: id.greaterThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.lessThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.lessThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.equals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.notEquals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: id.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: id.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: loanAmount.greaterThan
          in: query
          required: false
          schema:
            type: number
        - name: loanAmount.lessThan
          in: query
          required: false
          schema:
            type: number
        - name: loanAmount.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: loanAmount.lessThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: loanAmount.equals
          in: query
          required: false
          schema:
            type: number
        - name: loanAmount.notEquals
          in: query
          required: false
          schema:
            type: number
        - name: loanAmount.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: loanAmount.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: loanAmount.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: ownMoney.greaterThan
          in: query
          required: false
          schema:
            type: number
        - name: ownMoney.lessThan
          in: query
          required: false
          schema:
            type: number
        - name: ownMoney.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: ownMoney.lessThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: ownMoney.equals
          in: query
          required: false
          schema:
            type: number
        - name: ownMoney.notEquals
          in: query
          required: false
          schema:
            type: number
        - name: ownMoney.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: ownMoney.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: ownMoney.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: approved.equals
          in: query
          required: false
          schema:
            type: boolean
        - name: approved.notEquals
          in: query
          required: false
          schema:
            type: boolean
        - name: approved.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: approved.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
        - name: approved.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
        - name: contractDuration.greaterThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: contractDuration.lessThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: contractDuration.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: contractDuration.lessThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: contractDuration.equals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: contractDuration.notEquals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: contractDuration.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: contractDuration.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: contractDuration.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: contractStartDate.greaterThan
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: contractStartDate.lessThan
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: contractStartDate.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: contractStartDate.lessThanOrEqual
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: contractStartDate.equals
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: contractStartDate.notEquals
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: contractStartDate.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: contractStartDate.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              format: date-time
        - name: contractStartDate.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              format: date-time
        - name: createdDate.greaterThan
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: createdDate.lessThan
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: createdDate.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: createdDate.lessThanOrEqual
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: createdDate.equals
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: createdDate.notEquals
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: createdDate.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: createdDate.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              format: date-time
        - name: createdDate.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              format: date-time
        - name: lastUpdateDate.greaterThan
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: lastUpdateDate.lessThan
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: lastUpdateDate.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: lastUpdateDate.lessThanOrEqual
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: lastUpdateDate.equals
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: lastUpdateDate.notEquals
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: lastUpdateDate.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: lastUpdateDate.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              format: date-time
        - name: lastUpdateDate.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              format: date-time
        - name: interestRate.greaterThan
          in: query
          required: false
          schema:
            type: number
        - name: interestRate.lessThan
          in: query
          required: false
          schema:
            type: number
        - name: interestRate.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: interestRate.lessThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: interestRate.equals
          in: query
          required: false
          schema:
            type: number
        - name: interestRate.notEquals
          in: query
          required: false
          schema:
            type: number
        - name: interestRate.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: interestRate.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: interestRate.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: paybackRate.greaterThan
          in: query
          required: false
          schema:
            type: number
        - name: paybackRate.lessThan
          in: query
          required: false
          schema:
            type: number
        - name: paybackRate.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: paybackRate.lessThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: paybackRate.equals
          in: query
          required: false
          schema:
            type: number
        - name: paybackRate.notEquals
          in: query
          required: false
          schema:
            type: number
        - name: paybackRate.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: paybackRate.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: paybackRate.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: ctmFee.greaterThan
          in: query
          required: false
          schema:
            type: number
        - name: ctmFee.lessThan
          in: query
          required: false
          schema:
            type: number
        - name: ctmFee.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: ctmFee.lessThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: ctmFee.equals
          in: query
          required: false
          schema:
            type: number
        - name: ctmFee.notEquals
          in: query
          required: false
          schema:
            type: number
        - name: ctmFee.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: ctmFee.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: ctmFee.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: mtcFee.greaterThan
          in: query
          required: false
          schema:
            type: number
        - name: mtcFee.lessThan
          in: query
          required: false
          schema:
            type: number
        - name: mtcFee.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: mtcFee.lessThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: mtcFee.equals
          in: query
          required: false
          schema:
            type: number
        - name: mtcFee.notEquals
          in: query
          required: false
          schema:
            type: number
        - name: mtcFee.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: mtcFee.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: mtcFee.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: ctmCap.greaterThan
          in: query
          required: false
          schema:
            type: number
        - name: ctmCap.lessThan
          in: query
          required: false
          schema:
            type: number
        - name: ctmCap.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: ctmCap.lessThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: ctmCap.equals
          in: query
          required: false
          schema:
            type: number
        - name: ctmCap.notEquals
          in: query
          required: false
          schema:
            type: number
        - name: ctmCap.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: ctmCap.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: ctmCap.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: mtcCap.greaterThan
          in: query
          required: false
          schema:
            type: number
        - name: mtcCap.lessThan
          in: query
          required: false
          schema:
            type: number
        - name: mtcCap.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: mtcCap.lessThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: mtcCap.equals
          in: query
          required: false
          schema:
            type: number
        - name: mtcCap.notEquals
          in: query
          required: false
          schema:
            type: number
        - name: mtcCap.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: mtcCap.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: mtcCap.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: allowCtm.equals
          in: query
          required: false
          schema:
            type: boolean
        - name: allowCtm.notEquals
          in: query
          required: false
          schema:
            type: boolean
        - name: allowCtm.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: allowCtm.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
        - name: allowCtm.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
        - name: personId.greaterThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: personId.lessThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: personId.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: personId.lessThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: personId.equals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: personId.notEquals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: personId.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: personId.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: personId.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: distinct
          in: query
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: integer
                format: int64
  /api/inventories:
    get:
      tags:
        - inventory-resource
      operationId: getAllInventories
      parameters:
        - name: id.greaterThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.lessThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.lessThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.equals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.notEquals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: id.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: id.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: customerID.greaterThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: customerID.lessThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: customerID.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: customerID.lessThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: customerID.equals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: customerID.notEquals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: customerID.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: customerID.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: customerID.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: name.contains
          in: query
          required: false
          schema:
            type: string
        - name: name.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: name.equals
          in: query
          required: false
          schema:
            type: string
        - name: name.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: name.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: name.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: name.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: ownMoney.greaterThan
          in: query
          required: false
          schema:
            type: number
        - name: ownMoney.lessThan
          in: query
          required: false
          schema:
            type: number
        - name: ownMoney.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: ownMoney.lessThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: ownMoney.equals
          in: query
          required: false
          schema:
            type: number
        - name: ownMoney.notEquals
          in: query
          required: false
          schema:
            type: number
        - name: ownMoney.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: ownMoney.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: ownMoney.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: loanAmount.greaterThan
          in: query
          required: false
          schema:
            type: number
        - name: loanAmount.lessThan
          in: query
          required: false
          schema:
            type: number
        - name: loanAmount.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: loanAmount.lessThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: loanAmount.equals
          in: query
          required: false
          schema:
            type: number
        - name: loanAmount.notEquals
          in: query
          required: false
          schema:
            type: number
        - name: loanAmount.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: loanAmount.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: loanAmount.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: sumNoFees.greaterThan
          in: query
          required: false
          schema:
            type: number
        - name: sumNoFees.lessThan
          in: query
          required: false
          schema:
            type: number
        - name: sumNoFees.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: sumNoFees.lessThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: sumNoFees.equals
          in: query
          required: false
          schema:
            type: number
        - name: sumNoFees.notEquals
          in: query
          required: false
          schema:
            type: number
        - name: sumNoFees.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: sumNoFees.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: sumNoFees.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: boughtKg.greaterThan
          in: query
          required: false
          schema:
            type: number
            format: float
        - name: boughtKg.lessThan
          in: query
          required: false
          schema:
            type: number
            format: float
        - name: boughtKg.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: number
            format: float
        - name: boughtKg.lessThanOrEqual
          in: query
          required: false
          schema:
            type: number
            format: float
        - name: boughtKg.equals
          in: query
          required: false
          schema:
            type: number
            format: float
        - name: boughtKg.notEquals
          in: query
          required: false
          schema:
            type: number
            format: float
        - name: boughtKg.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: boughtKg.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
              format: float
        - name: boughtKg.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
              format: float
        - name: soldKg.greaterThan
          in: query
          required: false
          schema:
            type: number
            format: float
        - name: soldKg.lessThan
          in: query
          required: false
          schema:
            type: number
            format: float
        - name: soldKg.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: number
            format: float
        - name: soldKg.lessThanOrEqual
          in: query
          required: false
          schema:
            type: number
            format: float
        - name: soldKg.equals
          in: query
          required: false
          schema:
            type: number
            format: float
        - name: soldKg.notEquals
          in: query
          required: false
          schema:
            type: number
            format: float
        - name: soldKg.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: soldKg.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
              format: float
        - name: soldKg.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
              format: float
        - name: grain.contains
          in: query
          required: false
          schema:
            type: string
        - name: grain.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: grain.equals
          in: query
          required: false
          schema:
            type: string
        - name: grain.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: grain.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: grain.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: grain.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: boughtBagSum.greaterThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: boughtBagSum.lessThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: boughtBagSum.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: boughtBagSum.lessThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: boughtBagSum.equals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: boughtBagSum.notEquals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: boughtBagSum.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: boughtBagSum.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: boughtBagSum.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: soldBagSum.greaterThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: soldBagSum.lessThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: soldBagSum.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: soldBagSum.lessThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: soldBagSum.equals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: soldBagSum.notEquals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: soldBagSum.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: soldBagSum.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: soldBagSum.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: team.contains
          in: query
          required: false
          schema:
            type: string
        - name: team.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: team.equals
          in: query
          required: false
          schema:
            type: string
        - name: team.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: team.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: team.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: team.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: distinct
          in: query
          required: false
          schema:
            type: boolean
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Inventory"
  /api/inventories/count:
    get:
      tags:
        - inventory-resource
      operationId: countInventories
      parameters:
        - name: id.greaterThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.lessThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.lessThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.equals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.notEquals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: id.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: id.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: id.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: customerID.greaterThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: customerID.lessThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: customerID.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: customerID.lessThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: customerID.equals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: customerID.notEquals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: customerID.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: customerID.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: customerID.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: name.contains
          in: query
          required: false
          schema:
            type: string
        - name: name.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: name.equals
          in: query
          required: false
          schema:
            type: string
        - name: name.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: name.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: name.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: name.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: ownMoney.greaterThan
          in: query
          required: false
          schema:
            type: number
        - name: ownMoney.lessThan
          in: query
          required: false
          schema:
            type: number
        - name: ownMoney.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: ownMoney.lessThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: ownMoney.equals
          in: query
          required: false
          schema:
            type: number
        - name: ownMoney.notEquals
          in: query
          required: false
          schema:
            type: number
        - name: ownMoney.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: ownMoney.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: ownMoney.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: loanAmount.greaterThan
          in: query
          required: false
          schema:
            type: number
        - name: loanAmount.lessThan
          in: query
          required: false
          schema:
            type: number
        - name: loanAmount.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: loanAmount.lessThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: loanAmount.equals
          in: query
          required: false
          schema:
            type: number
        - name: loanAmount.notEquals
          in: query
          required: false
          schema:
            type: number
        - name: loanAmount.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: loanAmount.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: loanAmount.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: sumNoFees.greaterThan
          in: query
          required: false
          schema:
            type: number
        - name: sumNoFees.lessThan
          in: query
          required: false
          schema:
            type: number
        - name: sumNoFees.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: sumNoFees.lessThanOrEqual
          in: query
          required: false
          schema:
            type: number
        - name: sumNoFees.equals
          in: query
          required: false
          schema:
            type: number
        - name: sumNoFees.notEquals
          in: query
          required: false
          schema:
            type: number
        - name: sumNoFees.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: sumNoFees.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: sumNoFees.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
        - name: boughtKg.greaterThan
          in: query
          required: false
          schema:
            type: number
            format: float
        - name: boughtKg.lessThan
          in: query
          required: false
          schema:
            type: number
            format: float
        - name: boughtKg.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: number
            format: float
        - name: boughtKg.lessThanOrEqual
          in: query
          required: false
          schema:
            type: number
            format: float
        - name: boughtKg.equals
          in: query
          required: false
          schema:
            type: number
            format: float
        - name: boughtKg.notEquals
          in: query
          required: false
          schema:
            type: number
            format: float
        - name: boughtKg.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: boughtKg.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
              format: float
        - name: boughtKg.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
              format: float
        - name: soldKg.greaterThan
          in: query
          required: false
          schema:
            type: number
            format: float
        - name: soldKg.lessThan
          in: query
          required: false
          schema:
            type: number
            format: float
        - name: soldKg.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: number
            format: float
        - name: soldKg.lessThanOrEqual
          in: query
          required: false
          schema:
            type: number
            format: float
        - name: soldKg.equals
          in: query
          required: false
          schema:
            type: number
            format: float
        - name: soldKg.notEquals
          in: query
          required: false
          schema:
            type: number
            format: float
        - name: soldKg.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: soldKg.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
              format: float
        - name: soldKg.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
              format: float
        - name: grain.contains
          in: query
          required: false
          schema:
            type: string
        - name: grain.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: grain.equals
          in: query
          required: false
          schema:
            type: string
        - name: grain.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: grain.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: grain.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: grain.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: boughtBagSum.greaterThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: boughtBagSum.lessThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: boughtBagSum.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: boughtBagSum.lessThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: boughtBagSum.equals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: boughtBagSum.notEquals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: boughtBagSum.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: boughtBagSum.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: boughtBagSum.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: soldBagSum.greaterThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: soldBagSum.lessThan
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: soldBagSum.greaterThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: soldBagSum.lessThanOrEqual
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: soldBagSum.equals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: soldBagSum.notEquals
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: soldBagSum.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: soldBagSum.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: soldBagSum.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: team.contains
          in: query
          required: false
          schema:
            type: string
        - name: team.doesNotContain
          in: query
          required: false
          schema:
            type: string
        - name: team.equals
          in: query
          required: false
          schema:
            type: string
        - name: team.notEquals
          in: query
          required: false
          schema:
            type: string
        - name: team.specified
          in: query
          required: false
          schema:
            type: boolean
        - name: team.in
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: team.notIn
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
        - name: distinct
          in: query
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: integer
                format: int64
  /api/authorities:
    get:
      tags:
        - public-user-resource
      operationId: getAuthorities
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  type: string
  /api/admin/users/{login}:
    get:
      tags:
        - user-resource
      operationId: getUser
      parameters:
        - name: login
          in: path
          required: true
          schema:
            pattern: ^\+[0-9]+$
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AdminUserDTO"
    delete:
      tags:
        - user-resource
      operationId: deleteUser
      parameters:
        - name: login
          in: path
          required: true
          schema:
            pattern: ^\+[0-9]+$
            type: string
      responses:
        "200":
          description: OK
  /api/activate:
    get:
      tags:
        - account-resource
      operationId: activateAccount
      parameters:
        - name: key
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
components:
  schemas:
    Location:
      type: object
      properties:
        id:
          type: integer
          format: int64
    Person:
      required:
        - mobileNumber
      type: object
      properties:
        id:
          type: integer
          format: int64
        mobileNumber:
          type: string
      description: |-
        The Person entity.  Can be anything like a person selling grains,
        buying grain, whatever.
    Warehouse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        bagCapacity:
          type: integer
          format: int64
        name:
          type: string
        location:
          $ref: "#/components/schemas/Location"
        person:
          $ref: "#/components/schemas/Person"
    Bag:
      required:
        - idCode
      type: object
      properties:
        id:
          type: integer
          format: int64
        batchBagCount:
          type: integer
          format: int64
        idCode:
          type: string
        firstPrice:
          type: number
        salePrice:
          type: number
        weight:
          type: number
          format: float
        moisture:
          type: number
          format: float
        contentType:
          $ref: "#/components/schemas/Grain"
        transaction:
          $ref: "#/components/schemas/Transaction"
        sale:
          $ref: "#/components/schemas/Sale"
    Grain:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    Payment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        paymentRequestedDate:
          type: string
          format: date-time
        paymentDate:
          type: string
          format: date-time
        nonLoanMoneyReceived:
          type: string
          format: date-time
        price:
          type: number
        paymentFromName:
          type: string
        paymentToName:
          type: string
        paymentFromMobile:
          type: string
        paymentToMobile:
          type: string
        coordinates:
          type: string
        remark:
          type: string
        deleted:
          type: boolean
        collateral:
          type: number
        network:
          type: string
          enum:
            - AIR
            - VOD
            - MTN
            - TIG
            - MPESA
        paymentExtid:
          type: string
        paymentErroneous:
          type: boolean
        paymentStatusMessage:
          type: string
        paymentResponse:
          type: string
    Sale:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdDate:
          type: string
          format: date-time
        lastUpdateDate:
          type: string
          format: date-time
    Transaction:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdDate:
          type: string
          format: date-time
        lastUpdateDate:
          type: string
          format: date-time
        repackDate:
          type: string
          format: date-time
        bags:
          uniqueItems: true
          type: array
          items:
            $ref: "#/components/schemas/Bag"
        warehouse:
          $ref: "#/components/schemas/Warehouse"
        location:
          $ref: "#/components/schemas/Location"
        buyer:
          $ref: "#/components/schemas/Person"
        seller:
          $ref: "#/components/schemas/Person"
        payment:
          $ref: "#/components/schemas/Payment"
    PersonTeam:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        person:
          $ref: "#/components/schemas/Person"
    LoanContract:
      required:
        - allowCtm
        - approved
        - contractDuration
        - contractStartDate
        - createdDate
        - ctmFee
        - interestRate
        - loanAmount
        - mtcFee
        - ownMoney
        - paybackRate
      type: object
      properties:
        id:
          type: integer
          format: int64
        loanAmount:
          type: number
        ownMoney:
          type: number
        approved:
          type: boolean
        contractDuration:
          type: integer
          format: int64
        contractStartDate:
          type: string
          format: date-time
        createdDate:
          type: string
          format: date-time
        lastUpdateDate:
          type: string
          format: date-time
        interestRate:
          type: number
        paybackRate:
          type: number
        ctmFee:
          maximum: 100
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
          type: number
        mtcFee:
          maximum: 100
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
          type: number
        ctmCap:
          type: number
        mtcCap:
          type: number
        allowCtm:
          type: boolean
        person:
          $ref: "#/components/schemas/Person"
    User:
      required:
        - activated
        - login
      type: object
      properties:
        id:
          type: integer
          format: int64
        login:
          maxLength: 50
          minLength: 1
          pattern: ^\+[0-9]+$
          type: string
        firstName:
          maxLength: 50
          minLength: 0
          type: string
        lastName:
          maxLength: 50
          minLength: 0
          type: string
        email:
          maxLength: 254
          minLength: 5
          type: string
        activated:
          type: boolean
        langKey:
          maxLength: 10
          minLength: 2
          type: string
        imageUrl:
          maxLength: 256
          minLength: 0
          type: string
        resetKey:
          maxLength: 20
          minLength: 0
          type: string
        resetDate:
          type: string
          format: date-time
    PaymentDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        paymentRequestedDate:
          type: string
          format: date-time
        paymentDate:
          type: string
          format: date-time
        nonLoanMoneyReceived:
          type: string
          format: date-time
        price:
          type: number
        paymentFromName:
          type: string
        paymentToName:
          type: string
        paymentFromMobile:
          type: string
        paymentToMobile:
          type: string
        coordinates:
          type: string
        remark:
          type: string
        deleted:
          type: boolean
        collateral:
          type: number
        network:
          type: string
          enum:
            - AIR
            - VOD
            - MTN
            - TIG
            - MPESA
        paymentExtid:
          type: string
        paymentErroneous:
          type: boolean
        paymentStatusMessage:
          type: string
        paymentResponse:
          type: string
        transaction:
          $ref: "#/components/schemas/Transaction"
        sale:
          $ref: "#/components/schemas/Sale"
        produce:
          type: string
        kg:
          type: number
          format: float
    AdminUserDTO:
      required:
        - login
      type: object
      properties:
        id:
          type: integer
          format: int64
        login:
          maxLength: 50
          minLength: 1
          pattern: ^\+[0-9]+$
          type: string
        firstName:
          maxLength: 50
          minLength: 0
          type: string
        lastName:
          maxLength: 50
          minLength: 0
          type: string
        email:
          maxLength: 254
          minLength: 5
          type: string
        imageUrl:
          maxLength: 256
          minLength: 0
          type: string
        activated:
          type: boolean
        langKey:
          maxLength: 10
          minLength: 2
          type: string
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        authorities:
          uniqueItems: true
          type: array
          items:
            type: string
    ManagedUserVM:
      required:
        - login
      type: object
      properties:
        id:
          type: integer
          format: int64
        login:
          maxLength: 50
          minLength: 1
          pattern: ^\+[0-9]+$
          type: string
        firstName:
          maxLength: 50
          minLength: 0
          type: string
        lastName:
          maxLength: 50
          minLength: 0
          type: string
        email:
          maxLength: 254
          minLength: 5
          type: string
        imageUrl:
          maxLength: 256
          minLength: 0
          type: string
        activated:
          type: boolean
        langKey:
          maxLength: 10
          minLength: 2
          type: string
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        authorities:
          uniqueItems: true
          type: array
          items:
            type: string
        password:
          maxLength: 100
          minLength: 4
          type: string
    PaymentTransactionDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        paymentPurpose:
          type: string
        paymentDate:
          type: string
          format: date-time
        paymentTriggeredDate:
          type: string
          format: date-time
        networkType:
          type: string
          enum:
            - AIR
            - VOD
            - MTN
            - TIG
            - MPESA
        paymentErroneous:
          type: boolean
        paymentStatusMessage:
          type: string
        paymentResponse:
          type: string
        price:
          type: number
        paymentFromName:
          type: string
        paymentToName:
          type: string
        paymentFromMobile:
          type: string
        paymentToMobile:
          type: string
        momoTransType:
          type: string
          enum:
            - CTM
            - MTC
            - SMS
        paymentExtId:
          type: string
        humanSaysOk:
          type: boolean
        fee:
          type: number
        payment:
          $ref: "#/components/schemas/PaymentDTO"
        dependsOnPaymentTransaction:
          $ref: "#/components/schemas/PaymentTransactionDTO"
    LoginVM:
      required:
        - password
        - username
      type: object
      properties:
        username:
          maxLength: 50
          minLength: 1
          type: string
        password:
          maxLength: 100
          minLength: 4
          type: string
        rememberMe:
          type: boolean
    JWTToken:
      type: object
      properties:
        id_token:
          type: string
    KeyAndPasswordVM:
      type: object
      properties:
        key:
          type: string
        newPassword:
          type: string
    PasswordChangeDTO:
      type: object
      properties:
        currentPassword:
          type: string
        newPassword:
          type: string
    Uv:
      type: object
      properties:
        pid:
          type: integer
          format: int64
        id:
          type: integer
          format: int64
        login:
          type: string
        mobileNumber:
          type: string
        firstName:
          type: string
        lastName:
          type: string
    Inventory:
      type: object
      properties:
        customerID:
          type: integer
          format: int64
        name:
          type: string
        ownMoney:
          type: number
        loanAmount:
          type: number
        sumNoFees:
          type: number
        boughtKg:
          type: number
          format: float
        soldKg:
          type: number
          format: float
        grain:
          type: string
        boughtBagSum:
          type: integer
          format: int64
        soldBagSum:
          type: integer
          format: int64
        team:
          type: string
    UserDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        login:
          type: string
